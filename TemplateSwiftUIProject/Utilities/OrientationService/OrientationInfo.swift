//
//  OrientationInfo.swift
//  TemplateSwiftUIProject
//
//  Created by Evgenyi on 25.05.25.


// MARK: - DeviceOrientationService

// –±—É–¥–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Ä–≤–∏—Å–∞ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏ GeometryReader.





// MARK: - GeometryReader how main listener orientation

// –µ—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º –∏–∑ DeviceOrientationService –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
// –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å RootSizeReader –æ—Å–Ω–æ–≤–Ω—ã–º –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ä–∏–Ω–∞—Ç—Ü–∏–∏ –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—Ü —à–∏—Ä–∏–Ω–∞ –±–æ–ª—å—à–µ –≤—ã—Å–æ—Ç—ã –º—ã –≤ –ª–∞–Ω–¥—à–∞—Ñ—Ç–µ –∞ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å—Ä–∞–≤–Ω–∏–∏—Ç—å —Å UIDevice
// –∏ —Ç–æ–≥–¥–∞ –∫–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—à—É –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –º—ã –º–æ–∂–µ–º –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ @Published private(set) var orientation –∏ –≤ DeviceOrientationService –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç —É–∂–µ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Ä–∞—å–æ—Ç–∞—Ç—å.

//–ü–æ–¥—Ö–æ–¥ A. –ù–µ –º–æ—Ä–æ—á–∏—Ç—å—Å—è ‚Äî –æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å –∏–ª–∏ –ü–æ–¥—Ö–æ–¥ B. –°–≤–µ—Å—Ç–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤ –æ–¥–∏–Ω —Å–µ—Ä–≤–∏—Å (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π) / –ü–æ–¥—Ö–æ–¥ C. –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—Ä—è–º–æ –≤ View (CombineLatest)
//–ö–æ–≥–¥–∞ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∏ DeviceOrientationService –∏ GeometryReader –≤ –æ–¥–Ω–æ–º View, –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–∞—Ç—å:
///–ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã –¥–∞–Ω–Ω—ã—Ö - –°–∏—Å—Ç–µ–º–Ω–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è –∏ —Ä–∞–∑–º–µ—Ä—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–æ–≥—É—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—Ç—å
///–†–∞–∑–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è - UIDevice.orientation –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º GeometryReader
///–î—Ä–µ–±–µ–∑–≥ –∑–Ω–∞—á–µ–Ω–∏–π - –û—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–∏ –∞–Ω–∏–º–∞—Ü–∏—è—Ö –ø–æ–≤–æ—Ä–æ—Ç–∞

// MARK: - Adaptive UI (iPod + iOS)

// –æ—Å—Ç–∞–≤–∏–º –ø–æ–¥–¥–µ—Ä–∂–∫—É iPad –Ω–æ –æ—Ç–∫–ª—é—á—É —Ä–µ–∂–∏–º—ã Split View, Slide Over, Stage Manager –≤ info.plist
///
///–ó–∞–ø—Ä–µ—â–∞–µ—Ç –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ Split View –∏ Slide Over ‚Äî –æ–Ω–æ –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ.
///–í iPadOS 16+ Stage Manager –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å –æ–∫–Ω–∞ –≤—Ä—É—á–Ω—É—é, –Ω–æ —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤–Ω–µ—à–Ω–µ–≥–æ —ç–∫—Ä–∞–Ω–∞:
///–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫, –±–µ–∑ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ–∫–æ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞.
///Stage Manager –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—Å–µ–≥–¥–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –≤–µ—Å—å —ç–∫—Ä–∞–Ω.


// MARK: - Setting

//var isRotationLocked
///let supportedOrientations = UIApplication.shared.supportedInterfaceOrientations(for: nil) - –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
///–ß–µ–º —ç—Ç–æ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è? - Info.plist (UISupportedInterfaceOrientations), AppDelegate (application(_:supportedInterfaceOrientationsFor:)), UIViewController.supportedInterfaceOrientations (–≤ —Ç–µ–∫—É—â–µ–º VC)
///supportedOrientations ‚Üí —ç—Ç–æ –º–∞—Å–∫–∞ (UIInterfaceOrientationMask), —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ (.portrait, .landscapeLeft, .landscapeRight –∏ —Ç. –¥.).
///return supportedOrientations == .portrait || supportedOrientations.isSubset(of: .portrait) - –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–≤–æ—Ä–æ—Ç
///–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Ä—Ç—Ä–µ—Ç–Ω—É—é –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é.
///–µ—Å–ª–∏ –≤ Info.plist –∑–∞–ø–∏—Å–∞–Ω–æ —Ç–æ–ª—å–∫–æ .portrait, —Ç–æ —Å—á–∏—Ç–∞–µ—Ç—Å—è, —á—Ç–æ –ø–æ–≤–æ—Ä–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.
///supportedOrientations.isSubset(of: .portrait) - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –º–∞—Å–∫–∞ —Ç–æ–ª—å–∫–æ –ø–æ—Ä—Ç—Ä–µ—Ç–Ω—É—é –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é. –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–π–º–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ–≥–¥–∞ –∫—Ä–æ–º–µ .portrait –≤–æ–æ–±—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ.
///–ï—Å–ª–∏ –≤ supportedOrientations –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ .portrait ‚Üí isSubset(of: .portrait) == true. ‚ùå –ï—Å–ª–∏ —Ç–∞–º –µ—Å—Ç—å –∏ .portrait, –∏ .landscapeLeft ‚Üí isSubset(of: .portrait) == false.
///–†–µ–∑—É–ª—å—Ç–∞—Ç: –ï—Å–ª–∏ –≤ supportedOrientations –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Ä—Ç—Ä–µ—Ç ‚Äî isRotationLocked == true. –ï—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –ª–∞–Ω–¥—à–∞—Ñ—Ç–Ω—ã–µ —Ä–µ–∂–∏–º—ã ‚Äî isRotationLocked == false.
///–≠—Ç–æ—Ç –∫–æ–¥ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ —ç–∫—Ä–∞–Ω –≤ –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ. –û–Ω –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å, –±—É–¥–µ—Ç –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –≤ .landscape, –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å UI.
///
///–ü–æ—á–µ–º—É –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–¥–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ supportedOrientations == .portrait?
///isRotationLocked —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –±–æ–ª–µ–µ –Ω–∞–¥—ë–∂–Ω—ã–º –∏ —É—á–∏—Ç—ã–≤–∞–µ—Ç –±–æ–ª—å—à–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤!
///supportedOrientations == .portrait // `true`, –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¢–û–õ–¨–ö–û –ø–æ—Ä—Ç—Ä–µ—Ç! –ù–æ –µ—Å–ª–∏ supportedOrientations —Å–æ–¥–µ—Ä–∂–∏—Ç –µ—â—ë –∏ –ª–∞–Ω–¥—à–∞—Ñ—Ç, —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä–Ω—ë—Ç false, –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ.
///supportedOrientations.isSubset(of: .portrait) // `true`, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –¢–û–õ–¨–ö–û –ø–æ—Ä—Ç—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∂–∏–º—ã
///–≠—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤ supportedOrientations –Ω–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–π –∫—Ä–æ–º–µ .portrait.
///–≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç–µ–∫—É—â–∞—è –º–∞—Å–∫–∞ –¢–û–õ–¨–ö–û .portrait, –¥–∞–∂–µ –µ—Å–ª–∏ –≤ Info.plist —è–≤–Ω–æ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã .portrait, .portraitUpsideDown (—á—Ç–æ –≤—Å—ë —Ä–∞–≤–Ω–æ —è–≤–ª—è–µ—Ç—Å—è –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–π –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–µ–π).
///–ü–µ—Ä–≤–∞—è (== .portrait) –ª–æ–≤–∏—Ç —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç: —á–∏—Å—Ç—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç –±–µ–∑ –¥—Ä—É–≥–∏—Ö –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–π. üîπ –í—Ç–æ—Ä–∞—è (isSubset(of: .portrait)) –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤ –º–∞—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –Ω–µ—Ç –Ω–∏—á–µ–≥–æ –∫—Ä–æ–º–µ –ø–æ—Ä—Ç—Ä–µ—Ç–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤.
///–û–ø–µ—Ä–∞—Ç–æ—Ä || (–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ò–õ–ò) –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –µ—Å–ª–∏ –ª—é–±–∞—è –∏–∑ –¥–≤—É—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤–µ—Ä–Ω—ë—Ç true, –≤—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Ç–æ–∂–µ –±—É–¥–µ—Ç true.
///—Ç–æ –µ—Å—Ç—å –µ—Å–ª–∏ –±—ã –º—ã –æ—Å—Ç–∞–≤–∏–ª–∏ —Ç–æ–ª—å–∫–æ supportedOrientations == .portrait –∏ –≤ supportedOrientations –±—ã–ª–æ –±—ã (.portrait, .portraitUpsideDown) —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—ã–ª –±—ã false –Ω–æ –æ–Ω –±—ã –Ω–∞–º –ø–æ–¥–æ—à–µ–ª!

//var currentInterfaceOrientation: UIInterfaceOrientation
///–ß—Ç–æ –¥–µ–ª–∞–µ—Ç currentInterfaceOrientation?
///–≠—Ç–æ –Ω–æ–≤—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏, –ø–æ—è–≤–∏–≤—à–∏–π—Å—è –≤ iOS 16+.
///currentInterfaceOrientation —Ç–æ—á–Ω–µ–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç UI, –∞ –Ω–µ –∫–∞–∫ –ø–æ–≤–µ—Ä–Ω—É—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ. ‚úÖ –û–Ω –ø–æ–ª–µ–∑–µ–Ω –≤ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö, –æ—Å–æ–±–µ–Ω–Ω–æ —Å Split View, Stage Manager. ‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ default –≤ switch –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–ª—É—á–∞–∏, –∫–æ–≥–¥–∞ UIDevice.orientation –¥–∞—ë—Ç –æ—à–∏–±–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
///currentInterfaceOrientation ‚Äî —ç—Ç–æ –≤–∞—à –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –≥–µ—Ç—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –¥–æ–±–∞–≤–∏–ª–∏ –≤ DeviceOrientationService. –û–Ω –ø—Ä–æ—Å—Ç–æ –¥–æ—Å—Ç–∞—ë—Ç –ø–æ–ª–µ interfaceOrientation —É –ø–µ—Ä–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ–π UIWindowScene.(WindowGroup ‚Äî —ç—Ç–æ –¥–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω–∞—è ¬´–æ–±—ë—Ä—Ç–∫–∞¬ª –Ω–∞–¥ UIKit-—Å—Ü–µ–Ω–æ–π. –≤ –ª—é–±–æ–º SwiftUI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ (–∫—Ä–æ–º–µ –≤–∏–¥–∂–µ—Ç–∞) —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ UIWindowScene —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –¥–∞–∂–µ –µ—Å–ª–∏ –≤—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤–∏–¥–µ–ª–∏ –µ—ë –≤ –∫–æ–¥–µ.)
/// default –ª–æ–≤–∏—Ç –≤—Å–µ ¬´–≥—Ä—è–∑–Ω—ã–µ¬ª —Å–∏—Ç—É–∞—Ü–∏–∏ ‚Ä¢ .unknown, .faceUp, .faceDown (—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–∞ —Å—Ç–æ–ª–µ –ª–∏—Ü–æ–º –≤–≤–µ—Ä—Ö –∏–ª–∏ –≤–Ω–∏–∑)
/// –ú–∏–Ω–∏–º—É–º –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –ü—Ä–æ–≤–µ—Ä–∏—Ç—å UIDevice.orientation –¥–µ—à–µ–≤–ª–µ, —á–µ–º –∫–∞–∂–¥—ã–π —Ä–∞–∑ –∏—Å–∫–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é UIWindowScene –∏ –¥—ë—Ä–≥–∞—Ç—å –µ—ë interfaceOrientation. –ú—ã –¥–µ–ª–∞–µ–º —ç—Ç–æ –ª–∏—à—å —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –¥–∞—Ç—á–∏–∫ –Ω–µ –¥–∞–ª –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞.

//UIDevice.orientation  vs currentInterfaceOrientation
///¬´–î–∞—Ç—á–∏–∫-—á–∞–π–Ω–∏–∫¬ª ‚Äî UIDevice.orientation
///¬´–û—Ä–∫–µ—Å—Ç—Ä-–¥–∏—Ä–∏–∂—ë—Ä¬ª ‚Äî UIWindowScene.interfaceOrientation (—Ç–æ, —á—Ç–æ –º—ã —á–∏—Ç–∞–µ–º –∫–∞–∫ currentInterfaceOrientation)
///
///–ö–∞–∫ –¥—É–º–∞–µ—Ç –¥–∞—Ç—á–∏–∫ (UIDevice.orientation)
///–û–Ω —Ç—É–ø–æ –ø–æ–¥—Å–ª—É—à–∏–≤–∞–µ—Ç –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä: ¬´–ö–æ—Ä–ø—É—Å –ø–æ–≤–µ—Ä–Ω—É–ª–∏ –Ω–∞ 90¬∞? –°—É–ø–µ—Ä, —Å—Ç–∞–≤–ª—é .landscapeLeft. –õ–µ–∂–∏–º —ç–∫—Ä–∞–Ω–æ–º –≤–≤–µ—Ä—Ö? –ù—É –æ–∫, .faceUp. –í–æ–æ–±—â–µ –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç? –õ–∞–¥–Ω–æ, –∫–∏–Ω—É .unknown.¬ª
///–ü—Ä–æ–±–ª–µ–º–∞: –¥–∞—Ç—á–∏–∫ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–Ω–∞–µ—Ç –ø—Ä–æ —Ç–≤–æ—ë –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –ø—Ä–æ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ –∏–ª–∏ –ø—Ä–æ Split View. –û–Ω —á–µ—Å—Ç–Ω–æ –¥–æ–∫–ª–∞–¥—ã–≤–∞–µ—Ç –ø–æ–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –Ω–æ —ç—Ç–æ –Ω–æ–ª—å –ø–æ–ª—å–∑—ã, –∫–æ–≥–¥–∞ UI –∂–∏—Ç—å –Ω–µ —Ö–æ—á–µ—Ç –≤ –ª–∞–Ω–¥—à–∞—Ñ—Ç–µ.
///
///–ö–∞–∫ –¥—É–º–∞–µ—Ç –¥–∏—Ä–∏–∂—ë—Ä (currentInterfaceOrientation)
///–°–Ω–∞—á–∞–ª–∞ –∫ –Ω–µ–º—É –ø—Ä–∏—Ö–æ–¥—è—Ç —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≥–æ –∂–µ –¥–∞—Ç—á–∏–∫–∞.
///–û–Ω —Å–º–æ—Ç—Ä–∏—Ç, —á—Ç–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –≤ Info.plist, –¥–µ–ª–µ–≥–∞—Ç–∞—Ö –∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö. ‚Äë ¬´–ê–≥–∞, —É —Ç–µ–±—è UISupportedInterfaceOrientations = PortraitOnly? –û–∫–µ–π, –∑–∞–±—É–¥—å –ø—Ä–æ –ª–∞–Ω–¥—à–∞—Ñ—Ç, –¥–∞–∂–µ –µ—Å–ª–∏ –∫–æ—Ä–ø—É—Å –ª–µ–∂–∏—Ç –±–æ–∫–æ–º.¬ª
///–û–Ω —É—á–∏—Ç—ã–≤–∞–µ—Ç, –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–∑–º–µ—Å—Ç–∏–ª–∞ –æ–∫–Ω–æ: ‚Ä¢ –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–µ? ‚Ä¢ 70/30 Split View? ‚Ä¢ –û–∫–Ω–æ Stage Manager –Ω–∞ –≤–Ω–µ—à–Ω–µ–º –¥–∏—Å–ø–ª–µ–µ?
///–¢–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –æ–Ω –≥–æ–≤–æ—Ä–∏—Ç: ¬´–í–æ—Ç –º–æ—ë –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ: UI —Å–µ–π—á–∞—Å .portrait (–∏–ª–∏ .landscapeLeft / .landscapeRight).¬ª ‚Äë –ï—Å–ª–∏ –æ–∫–Ω–æ –≤–æ–æ–±—â–µ –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–ª–∏, –æ–Ω –Ω–µ –º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –¥–∞—Ç—á–∏–∫ –æ—Ä–∞–ª ¬´landscape!¬ª. ‚Äë –ï—Å–ª–∏ UI –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –æ–Ω —É–ø—Ä—è–º–æ –¥–µ—Ä–∂–∏—Ç .portrait. ‚Äë –û–Ω –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç .unknown, .faceUp, .faceDown: –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —ç—Ç–∏ –ø–æ–∑—ã –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã.
///
///–ñ–∏–≤–æ–π –ø—Ä–∏–º–µ—Ä, –≥–¥–µ ¬´—É–º¬ª –∑–∞–º–µ—Ç–µ–Ω
///–¢—ã —Ä–∞–∑—Ä–µ—à–∏–ª —Ç–æ–ª—å–∫–æ –ø–æ—Ä—Ç—Ä–µ—Ç. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–ª–∞–¥—ë—Ç iPad –Ω–∞ –¥–∏–≤–∞–Ω –±–æ–∫–æ–º ‚Üí ‚Ä¢ –î–∞—Ç—á–∏–∫: ¬´landscapeRight!¬ª ‚Ä¢ –î–∏—Ä–∏–∂—ë—Ä: ¬´–ù–µ –≤–µ–¥—É—Å—å. UI –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –ø–æ—Ä—Ç—Ä–µ—Ç–Ω—ã–º, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç–∞–∫ –ø—Ä–æ—Å–∏–ª —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫.¬ª
///Split View, —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ, –Ω–æ –æ–∫–Ω–æ —Ä–∞—Å—Ç—è–Ω—É–ª–∏ —Ç–∞–∫, —á—Ç–æ –æ–Ω–æ —à–∏—Ä–µ –≤—ã—Å–æ—Ç—ã ‚Üí ‚Ä¢ –î–∞—Ç—á–∏–∫: ¬´portrait!¬ª (–∫–æ—Ä–ø—É—Å –≤ –ø–æ—Ä—Ç—Ä–µ—Ç–µ) ‚Ä¢ –î–∏—Ä–∏–∂—ë—Ä: ¬´UI-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Å—ë –µ—â—ë –ø–æ—Ä—Ç—Ä–µ—Ç, —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø—Ä–æ—Å—Ç–æ –¥–∞–ª –Ω–∞–º —à–∏—Ä–æ–∫—É—é –ø–ª–æ—â–∞–¥–∫—É. –ó–Ω–∞—á–∏—Ç, –æ—Å—Ç–∞—ë–º—Å—è .portrait.¬ª
///Stage Manager, iPad –¥–µ—Ä–∂–∞—Ç –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ, –∞ –æ–∫–Ω–æ —É—Ç–∞—â–∏–ª–∏ –Ω–∞ –≤–Ω–µ—à–Ω–∏–π –º–æ–Ω–∏—Ç–æ—Ä, –≥–¥–µ Landscape ‚Üí ‚Ä¢ –î–∞—Ç—á–∏–∫: ¬´portrait!¬ª ‚Ä¢ –î–∏—Ä–∏–∂—ë—Ä (–≥–ª—è–¥—è –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä): ¬´–û–∫–Ω–æ —Ä–µ–∞–ª—å–Ω–æ –ª–µ–∂–∏—Ç –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ ‚Äî –æ–±—ä—è–≤–ª—è—é .landscapeRight.¬ª
///
///–ü–æ—á–µ–º—É –º—ã –¥–µ—Ä–∂–∏–º –∏—Ö –æ–±–æ–∏—Ö
///–ë—ã—Å—Ç—Ä–æ: –¥–∞—Ç—á–∏–∫ –æ—Ç–≤–µ—á–∞–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–∞–º–µ—Ä—ã –∏–ª–∏ AR.
///–ù–∞–¥—ë–∂–Ω–æ: –¥–∏—Ä–∏–∂—ë—Ä –ø—Ä–∏–∫—Ä—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –¥–∞—Ç—á–∏–∫ –≤—Ä—ë—Ç –∏–ª–∏ UI –ø–æ–¥ –∑–∞–º–∫–æ–º.


import SwiftUI
import UIKit
import Combine

enum Orientation {
    case portrait
    case landscape
}

class DeviceOrientationService: ObservableObject {

    @Published private(set) var orientation: Orientation = .portrait
    
    private var cancellables = Set<AnyCancellable>()
    
    init() {
        updateOrientation()
        
        NotificationCenter.default.publisher(for: UIDevice.orientationDidChangeNotification)
            .sink { [weak self] _ in
                self?.updateOrientation()
            }
            .store(in: &cancellables)
    }
    
    private func updateOrientation() {
        let newOrientation: Orientation
        
        if isRotationLocked {
            newOrientation = .portrait
        } else {
            let deviceOrientation = UIDevice.current.orientation
            
            switch deviceOrientation {
            case .portrait, .portraitUpsideDown:
                newOrientation = .portrait
            case .landscapeLeft, .landscapeRight:
                newOrientation = .landscape
            default:
                // –ù–æ–≤—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è interfaceOrientation
                newOrientation = currentInterfaceOrientation?.isLandscape ?? false ? .landscape : .portrait
            }
        }
        
        DispatchQueue.main.async { [weak self] in
            self?.orientation = newOrientation
        }
    }
    
    private var currentInterfaceOrientation: UIInterfaceOrientation? {
        if #available(iOS 15.0, *) {
            return UIApplication.shared.connectedScenes
                .compactMap { $0 as? UIWindowScene }
                .first?
                .interfaceOrientation
        } else {
            return UIApplication.shared.windows.first?.windowScene?.interfaceOrientation
        }
    }
    
    private var isRotationLocked: Bool {
        let supportedOrientations = UIApplication.shared.supportedInterfaceOrientations(for: nil)
        return supportedOrientations == .portrait || supportedOrientations.isSubset(of: .portrait)
    }
    
    deinit {
        cancellables.forEach { $0.cancel() }
    }
}

extension UIInterfaceOrientation {
    var isLandscape: Bool {
        return self == .landscapeLeft || self == .landscapeRight
    }
}



struct RootSizeReader: View {
    @EnvironmentObject var orientation: DeviceOrientationService
    
    var body: some View {
        GeometryReader { geo in
            Color.clear
                .onAppear {
//                    print("RootSizeReader onAppear geo.size - \(geo.size)")
//                    orientation.update(raw: geo.size)
                }
                .onChange(of: geo.size) { _, newSize in
//                    print("RootSizeReader onChange geo.size - \(geo.size)")
//                    orientation.update(raw: newSize)
                }
        }
    }
}


// MARK: - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Ä–≤–∏—Å–∞ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏ GeometryReader.


// MARK: AdaptiveView

// –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –ª—é–±–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω—ã –∏ —Ä–∞–∑–º–µ—Ä, –∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è.
// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ–±—ë—Ä—Ç–∫–∞: –∫–ª–∞–¥—ë—à—å –≤–Ω—É—Ç—Ä—å –ª—é–±–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
// builder(size, orientation) ‚Üí View, –≥–¥–µ —É–∂–µ –º–æ–∂–Ω–æ –≤–µ—Ä—Å—Ç–∞—Ç—å.

// MARK: AdaptiveView ‚Äì –ª–æ–∫–∞–ª—å–Ω—ã–π size + –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è –≤ –æ–¥–Ω–æ–º ¬´–ø–∞–∫–µ—Ç–µ¬ª
import SwiftUI
import Combine

struct AdaptiveView<Content: View>: View {

    // –≤–Ω–µ—à–Ω—è—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è
    @EnvironmentObject private var orient: DeviceOrientationService
    // –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä
    @State private var containerSize = CGSize.zero

    // Subject, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∏–∑ size –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π Publisher
    private let sizeSubject = CurrentValueSubject<CGSize, Never>(.zero)

    // Builder-–∑–∞–º—ã–∫–∞–Ω–∏–µ, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–µ–µ –ª—é–±–æ–π View
    private let builder: (CGSize, Orientation) -> Content
    init(@ViewBuilder _ builder: @escaping (CGSize, Orientation) -> Content) {
        self.builder = builder
    }

    // CombineLatest –¥–≤—É—Ö ¬´–Ω–∞—Å—Ç–æ—è—â–∏—Ö¬ª Publisher-–æ–≤
    private var combined: AnyPublisher<(CGSize, Orientation), Never> {
        Publishers.CombineLatest(
            sizeSubject.removeDuplicates(),
            orient.$orientation.removeDuplicates()
        )
        .eraseToAnyPublisher()
    }

    var body: some View {
        GeometryReader { geo in
            builder(containerSize, orient.orientation)          // ‚Üê —Å–∞–º –∫–æ–Ω—Ç–µ–Ω—Ç
                .onAppear { updateSize(geo.size) }
                .onChange(of: geo.size) { old, new in  updateSize(new) }
        }
        .animation(.easeInOut(duration: 0.35), value: orient.orientation)
        .onReceive(combined) { (size, orient) in                // –∫–æ—Ä—Ç–µ–∂ –≤ —Å–∫–æ–±–∫–∞—Ö!
            debugPrint("‚á¢ sync  size:", size, "orient:", orient)
            // –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –∏–ª–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        }
    }

    private func updateSize(_ newSize: CGSize) {
        guard newSize != containerSize else { return }
        containerSize = newSize        // –¥–ª—è SwiftUI-–ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏
        sizeSubject.send(newSize)      // –¥–ª—è CombineLatest
    }
}


struct Onboarding: View {
    let page: OnboardingPage

    var body: some View {
        AdaptiveView { size, orient in
            if orient == .landscape {
                HStack(spacing: 24) {
                    Image(systemName: page.imageName)
                        .resizable().scaledToFit()
                        .frame(width: size.width * 0.20)
                    VStack(alignment: .leading, spacing: 16) {
                        Text(page.title).font(.title).bold()
                        Text(page.description)
                    }
                }
                .padding()
            } else {
                VStack(spacing: 24) {
                    Image(systemName: page.imageName)
                        .resizable().scaledToFit()
                        .frame(height: size.height * 0.30)
                    Text(page.title).font(.largeTitle).bold()
                    Text(page.description)
                }
                .padding(.horizontal)
            }
        }
    }
}


// MARK: - –ï—Å–ª–∏ —Ö–æ—á–µ—Ç—Å—è –∏–º–µ—Ç—å –∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –∏ —Ä–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ


//–ü–æ–¥—Ö–æ–¥ B. –°–≤–µ—Å—Ç–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤ –æ–¥–∏–Ω —Å–µ—Ä–≤–∏—Å (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π)




///–°–µ—Ä–≤–∏—Å —Ö—Ä–∞–Ω–∏—Ç –∏ —Ä–∞–∑–º–µ—Ä, –∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é, –≤—ã—á–∏—Å–ª—è—è –ø–æ—Å–ª–µ–¥–Ω—é—é –∏–∑ ¬´—á–∏—Å—Ç–æ–π¬ª –≥–µ–æ–º–µ—Ç—Ä–∏–∏.
///View —Å–ª—É—à–∞–µ—Ç –¢–û–õ–¨–ö–û —Å–µ—Ä–≤–∏—Å ‚Üí –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.




//@MainActor
//final class DeviceOrientationService: ObservableObject {
//
//    enum Orientation { case portrait, landscape }
//
//    @Published private(set) var orientation  : Orientation = .portrait
//    @Published private(set) var containerSize: CGSize      = .zero
//
//    private var cancellables = Set<AnyCancellable>()
//    private let sizeSubject  = PassthroughSubject<CGSize, Never>()
//
//    init() {
//
//        // ‚ù∂ –°—ã—Ä–æ–π –¥–∞—Ç—á–∏–∫ (UIDevice) ‚Äî —Ç–æ–ª—å–∫–æ fallback
//        NotificationCenter.default.publisher(for: UIDevice.orientationDidChangeNotification)
//            .sink { [weak self] _ in self?.fallbackFromDevice() }
//            .store(in: &cancellables)
//
//        // ‚ù∑ –ò—Å—Ç–∏–Ω–Ω—ã–π ¬´–º–∞—Å—Ç–µ—Ä-—Ç–∞–π–º–ª–∞–π–Ω¬ª ‚Äî —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
//        sizeSubject
//            .removeDuplicates()
//            .debounce(for: .milliseconds(40), scheduler: RunLoop.main) // –∂–¥–∞—Ç—å, –ø–æ–∫–∞ —é–∑–µ—Ä –æ—Ç–ø—É—Å—Ç–∏—Ç –ø–∞–ª–µ—Ü
//            .sink { [weak self] size in self?.apply(size) }
//            .store(in: &cancellables)
//    }
//
//    func updateSize(_ size: CGSize) { sizeSubject.send(size) }
//
//    // MARK: - private
//
//    private func apply(_ size: CGSize) {
//        containerSize = size
//        orientation   = size.width > size.height ? .landscape : .portrait
//    }
//
//    private func fallbackFromDevice() {
//        guard containerSize == .zero else { return } // —É–∂–µ –ø—Ä–∏—à—ë–ª geo.size‚Äî—Ñ–∞–ª–±–µ–∫ –Ω–µ –Ω—É–∂–µ–Ω
//        let device = UIDevice.current.orientation
//        orientation = (device == .landscapeLeft || device == .landscapeRight) ? .landscape : .portrait
//    }
//}

//struct RootSizeReader: View {
//    @EnvironmentObject var orient: DeviceOrientationService
//    var body: some View {
//        GeometryReader { geo in
//            Color.clear
//                .ignoresSafeArea()
//                .onAppear                     { orient.updateSize(geo.frame(in: .global).size) }
//                .onChange(of: geo.frame(in: .global).size) { new in
//                    orient.updateSize(new)
//                }
//        }
//    }
//}

//struct OnboardingPageView: View {
//    @EnvironmentObject private var orient: DeviceOrientationService
//    var body: some View {
//        if orient.orientation == .landscape {
//            LandscapeLayout(size: orient.containerSize)
//        } else {
//            PortraitLayout(size: orient.containerSize)
//        }
//        .animation(.easeInOut(duration: 0.35), value: orient.orientation)
//    }
//}





//–ü–æ–¥—Ö–æ–¥ C. –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—Ä—è–º–æ –≤ View (CombineLatest)


///–ï—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—Ç—Å—è –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å, –º–æ–∂–Ω–æ ¬´—Å–∫—Ä–µ—Å—Ç–∏—Ç—å¬ª –¥–≤–∞ Publisher –ø—Ä—è–º–æ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤—å—é—Ö–µ:


//struct AdaptiveView: View {
//    @EnvironmentObject private var orient: DeviceOrientationService
//    @State private var size: CGSize = .zero
//
//    var body: some View {
//        GeometryReader { geo in
//            Color.clear
//                .onAppear { size = geo.size }
//                .onChange(of: geo.size) { size = $0 }
//        }
//        .overlay(content)
//        .onReceive(Publishers.CombineLatest($size, orient.$orientation)) { newSize, newOrient in
//            // –∑–¥–µ—Å—å —É –≤–∞—Å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ ¬´–æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π¬ª –∫–∞–¥—Ä –∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è
//            // –º–æ–∂–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–ø—É—Å–∫–∞—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é
//        }
//    }

