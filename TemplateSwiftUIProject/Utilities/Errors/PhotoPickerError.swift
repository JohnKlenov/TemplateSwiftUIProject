//
//  PhotoPickerError.swift
//  TemplateSwiftUIProject
//
//  Created by Evgenyi on 25.08.25.
//

//    /// –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ)
//    case noItemAvailable
//
//    /// –≠–ª–µ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω—ã–π —Ñ–∞–π–ª)
//    case itemUnavailable
//
//    /// –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –º–µ–¥–∏–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–±—Ä–∞–Ω–æ –≤–∏–¥–µ–æ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–µ `.images`)
//    case unsupportedType
//
//    /// –î–æ—Å—Ç—É–ø –∫ —Ñ–æ—Ç–æ –∑–∞–ø—Ä–µ—â—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
//    case accessDenied
//
//    /// –î–æ—Å—Ç—É–ø –∫ —Ñ–æ—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –ø–æ–ª–∏—Ç–∏–∫–æ–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å)
//    case accessRestricted
//
//    /// –§–æ—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ iCloud –∏ —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏
//    case iCloudRequired
//
//    /// –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–∏)
//    case loadFailed(Error)
//
//    /// –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–∏)
//    case unknown(Error)
//

import SwiftUI
import PhotosUI
import Photos
import UniformTypeIdentifiers

// MARK: - –û—à–∏–±–∫–∏ —Ñ–æ—Ç–æ–ø–∏–∫–µ—Ä–∞

enum PhotoPickerError: Error {
    case noItemAvailable /// –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ)
    case itemUnavailable /// –≠–ª–µ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω—ã–π —Ñ–∞–π–ª)
    case unsupportedType /// –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –º–µ–¥–∏–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–±—Ä–∞–Ω–æ –≤–∏–¥–µ–æ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–µ `.images`)
    case iCloudRequired /// –§–æ—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ iCloud –∏ —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏
    case loadFailed(Error) /// –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–∏)
    case unknown(Error) /// –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–∏)
}

extension PhotoPickerError {
    var localizedDescription: String {
        switch self {
        case .noItemAvailable:
            return "–í—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
        case .itemUnavailable:
            return "–≠–ª–µ–º–µ–Ω—Ç –Ω–µ–ª—å–∑—è –∑–∞–≥—Ä—É–∑–∏—Ç—å."
        case .unsupportedType:
            return "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –º–µ–¥–∏–∞."
        case .iCloudRequired:
            return "–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ iCloud."
        case .loadFailed(let error), .unknown(let error):
            return (error as NSError).localizedDescription
        }
    }

    static func map(_ error: Error) -> PhotoPickerError {
        let nsError = error as NSError

        switch nsError.domain {
        case NSItemProvider.errorDomain:
            // üìå –î–æ–º–µ–Ω NSItemProvider.errorDomain
            // –û—à–∏–±–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π/–∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ NSItemProvider.
            // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ API –≤—Ä–æ–¥–µ PHPicker, drag & drop, share extensions.
            // –ó–¥–µ—Å—å –º–æ–≥—É—Ç –±—ã—Ç—å –∫–æ–¥—ã, –æ–∑–Ω–∞—á–∞—é—â–∏–µ, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω.
            switch nsError.code {
            case -1000:
                return .noItemAvailable   // –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–¥: —ç–ª–µ–º–µ–Ω—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
            case -1001:
                return .itemUnavailable   // –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–¥: —ç–ª–µ–º–µ–Ω—Ç –µ—Å—Ç—å, –Ω–æ –µ–≥–æ –Ω–µ–ª—å–∑—è –∑–∞–≥—Ä—É–∑–∏—Ç—å
            default:
                return .loadFailed(error) // –õ—é–±–∞—è –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ NSItemProvider
            }

        case PHPhotosErrorDomain:
            // üìå –î–æ–º–µ–Ω PHPhotosErrorDomain
            // –û—à–∏–±–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–º Photos (PhotoKit).
            // –û–±—ã—á–Ω–æ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –º–µ–¥–∏–∞ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            // –î–ª—è PHPicker –∏–∑ –ø—É–±–ª–∏—á–Ω—ã—Ö –∫–µ–π—Å–æ–≤ –ø–æ–ª–µ–∑–µ–Ω —Ç–æ–ª—å–∫–æ .networkAccessRequired.
            if let code = PHPhotosError.Code(rawValue: nsError.code) {
                switch code {
                case .networkAccessRequired:
                    return .iCloudRequired // –§–æ—Ç–æ –≤ iCloud, –Ω—É–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å (—Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ç—å)
                default:
                    return .loadFailed(error)
                }
            }
            return .loadFailed(error)

        case NSCocoaErrorDomain:
            // üìå –î–æ–º–µ–Ω NSCocoaErrorDomain
            // –û–±—â–∏–µ Cocoa-–æ—à–∏–±–∫–∏ (Foundation/AppKit/UIKit).
            // –ú–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–∞—Ç—å –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ñ–∞–π–ª–∞–º–∏, —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π, –¥–æ—Å—Ç—É–ø–æ–º –∫ —Ä–µ—Å—É—Ä—Å–∞–º.
            return .loadFailed(error)

        default:
            // üìå –õ—é–±–æ–π –¥—Ä—É–≥–æ–π –¥–æ–º–µ–Ω
            // –û—à–∏–±–∫–∞ –Ω–µ –∏–∑ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –Ω–∞–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π ‚Äî —Å—á–∏—Ç–∞–µ–º –µ—ë –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π.
            return .unknown(error)
        }
    }
}


//import SwiftUI
//import PhotosUI
//import Photos
//import UniformTypeIdentifiers
//
//// MARK: - –û—à–∏–±–∫–∏ —Ñ–æ—Ç–æ–ø–∏–∫–µ—Ä–∞
//
//enum PhotoPickerError: Error {
//    case noItemAvailable
//    case itemUnavailable
//    case unsupportedType
//    case iCloudRequired
//    case loadFailed(Error)
//    case unknown(Error)
//}
//
//extension PhotoPickerError {
//    var localizedDescription: String {
//        switch self {
//        case .noItemAvailable:
//            return "–í—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
//        case .itemUnavailable:
//            return "–≠–ª–µ–º–µ–Ω—Ç –Ω–µ–ª—å–∑—è –∑–∞–≥—Ä—É–∑–∏—Ç—å."
//        case .unsupportedType:
//            return "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –º–µ–¥–∏–∞."
//        case .iCloudRequired:
//            return "–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ iCloud."
//        case .loadFailed(let error), .unknown(let error):
//            return (error as NSError).localizedDescription
//        }
//    }
//
//    static func map(_ error: Error) -> PhotoPickerError {
//        let nsError = error as NSError
//
//        switch nsError.domain {
//        case NSItemProvider.errorDomain:
//            // –ú–∞–≥–∏—á–µ—Å–∫–∏–µ –∫–æ–¥—ã –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ NSItemProviderError
//            switch nsError.code {
//            case -1000:
//                return .noItemAvailable
//            case -1001:
//                return .itemUnavailable
//            default:
//                return .loadFailed(error)
//            }
//
//        case PHPhotosErrorDomain:
//            if let code = PHPhotosError.Code(rawValue: nsError.code) {
//                switch code {
//                case .networkAccessRequired:
//                    return .iCloudRequired
//                default:
//                    return .loadFailed(error)
//                }
//            }
//            return .loadFailed(error)
//
//        case NSCocoaErrorDomain:
//            return .loadFailed(error)
//
//        default:
//            return .unknown(error)
//        }
//    }
//}




//import Foundation
//import PhotosUI
//import Photos
//
///// –û—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–æ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å PHPicker/NSItemProvider
//enum PhotoPickerError: Error {
//    case noItemAvailable
//    case itemUnavailable
//    case unsupportedType           // –≤—ã—Å—Ç–∞–≤–ª—è–π –≤—Ä—É—á–Ω—É—é –ø—Ä–∏ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –æ–∂–∏–¥–∞–µ–º–æ–º—É UTType
//    case iCloudRequired
//    case loadFailed(Error)
//    case unknown(Error)
//}
//
//extension PhotoPickerError {
//    var localizedDescription: String {
//        switch self {
//        case .noItemAvailable:
//            return "–í—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
//        case .itemUnavailable:
//            return "–≠–ª–µ–º–µ–Ω—Ç –Ω–µ–ª—å–∑—è –∑–∞–≥—Ä—É–∑–∏—Ç—å."
//        case .unsupportedType:
//            return "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –º–µ–¥–∏–∞."
//        case .iCloudRequired:
//            return "–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ iCloud."
//        case .loadFailed(let error), .unknown(let error):
//            return (error as NSError).localizedDescription
//        }
//    }
//
//    /// –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤ –∫–µ–π—Å—ã PhotoPickerError
//    static func map(_ error: Error) -> PhotoPickerError {
//        let nsError = error as NSError
//
//        switch nsError.domain {
//        // –°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏–º—è –¥–æ–º–µ–Ω–∞: NSItemProvider.errorDomain
//        case NSItemProvider.errorDomain:
//            if let code = NSItemProvider.ErrorCode(rawValue: nsError.code) {
//                switch code {
//                case .noItemAvailable:
//                    return .noItemAvailable
//                case .itemUnavailable:
//                    return .itemUnavailable
//                default:
//                    return .loadFailed(error)
//                }
//            }
//            return .loadFailed(error)
//
//        // –î–æ–º–µ–Ω PhotoKit: PHPhotosErrorDomain
//        case PHPhotosErrorDomain:
//            if let code = PHPhotosError.Code(rawValue: nsError.code) {
//                switch code {
//                case .networkAccessRequired:
//                    return .iCloudRequired
//                default:
//                    return .loadFailed(error)
//                }
//            }
//            return .loadFailed(error)
//
//        case NSCocoaErrorDomain:
//            return .loadFailed(error)
//
//        default:
//            return .unknown(error)
//        }
//    }
//}








//import Foundation
//import PhotosUI
//
///// –í–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º —Ñ–æ—Ç–æ–ø–∏–∫–µ—Ä–æ–º
//enum PhotoPickerError: Error, Equatable {
//    
//    // MARK: - –ö–æ–¥—ã –æ—à–∏–±–æ–∫
//    
//    /// –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ)
//    case noItemAvailable
//    
//    /// –≠–ª–µ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω—ã–π —Ñ–∞–π–ª)
//    case itemUnavailable
//    
//    /// –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –º–µ–¥–∏–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–±—Ä–∞–Ω–æ –≤–∏–¥–µ–æ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–µ `.images`)
//    case unsupportedType
//    
//    /// –î–æ—Å—Ç—É–ø –∫ —Ñ–æ—Ç–æ –∑–∞–ø—Ä–µ—â—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
//    case accessDenied
//    
//    /// –î–æ—Å—Ç—É–ø –∫ —Ñ–æ—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –ø–æ–ª–∏—Ç–∏–∫–æ–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å)
//    case accessRestricted
//    
//    /// –§–æ—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ iCloud –∏ —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏
//    case iCloudRequired
//    
//    /// –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–∏)
//    case loadFailed(Error)
//    
//    /// –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–∏)
//    case unknown(Error)
//    
//    // MARK: - –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
//    
//    var localizedDescription: String {
//        switch self {
//        case .noItemAvailable:
//            return "–í—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
//        case .itemUnavailable:
//            return "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–æ."
//        case .unsupportedType:
//            return "–í—ã–±—Ä–∞–Ω –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –º–µ–¥–∏–∞."
//        case .accessDenied:
//            return "–î–æ—Å—Ç—É–ø –∫ —Ñ–æ—Ç–æ –∑–∞–ø—Ä–µ—â—ë–Ω."
//        case .accessRestricted:
//            return "–î–æ—Å—Ç—É–ø –∫ —Ñ–æ—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –ø–æ–ª–∏—Ç–∏–∫–æ–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞."
//        case .iCloudRequired:
//            return "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ iCloud –∏ —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏."
//        case .loadFailed(let error), .unknown(let error):
//            return error.localizedDescription
//        }
//    }
//    
//    // MARK: - –ú–∞–ø–ø–∏–Ω–≥ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –æ—à–∏–±–æ–∫ –≤ PhotoPickerError
//    
//    /// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—É—é –æ—à–∏–±–∫—É –≤ –æ–¥–∏–Ω –∏–∑ –∫–µ–π—Å–æ–≤ PhotoPickerError
//    static func map(_ error: Error) -> PhotoPickerError {
//        let nsError = error as NSError
//        
//        switch (nsError.domain, nsError.code) {
//            
//        // –û—à–∏–±–∫–∏ NSItemProvider
//        case (NSItemProviderErrorDomain, NSItemProviderError.noItemAvailable.rawValue):
//            return .noItemAvailable
//            
//        case (NSItemProviderErrorDomain, NSItemProviderError.itemUnavailable.rawValue):
//            return .itemUnavailable
//            
//        // –û—à–∏–±–∫–∏ PHPhotos
//        case (PHPhotosErrorDomain, PHPhotosError.accessDenied.rawValue):
//            return .accessDenied
//            
//        case (PHPhotosErrorDomain, PHPhotosError.accessRestricted.rawValue):
//            return .accessRestricted
//            
//        case (PHPhotosErrorDomain, PHPhotosError.networkAccessRequired.rawValue):
//            return .iCloudRequired
//            
//        // –û–±—â–∏–µ Cocoa-–æ—à–∏–±–∫–∏
//        case (NSCocoaErrorDomain, _):
//            return .loadFailed(error)
//            
//        // –û—Å—Ç–∞–ª—å–Ω—ã–µ ‚Äî –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ
//        default:
//            return .unknown(error)
//        }
//    }
//}
//
