//
//  UserInfoCellManager.swift
//  TemplateSwiftUIProject
//
//  Created by Evgenyi on 27.10.25.
//

import Combine
import FirebaseFirestore

/// –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
/// –ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫.
/// –û—Ç–¥–∞—ë—Ç –Ω–∞—Ä—É–∂—É –ø–∞–±–ª–∏—à–µ—Ä—ã –¥–ª—è ViewModel.
final class UserInfoCellManager {
    private let profileService: FirestoreProfileService
    private let userProvider: CurrentUserProvider
    private let errorHandler: ErrorHandlerProtocol
    
    // Publisher'—ã –¥–ª—è —Å–≤—è–∑–∏ —Å ViewModel
    let profileLoadingState = CurrentValueSubject<AuthorizationManager.State, Never>(.idle)
    let userProfile = CurrentValueSubject<UserProfile?, Never>(nil)
    
    private var profileLoadCancellable: AnyCancellable?
    private var userListenerCancellable: AnyCancellable?
    
    private var currentUID: String?
    
    init(profileService: FirestoreProfileService, userProvider: CurrentUserProvider,
         errorHandler: ErrorHandlerProtocol) {
        self.profileService = profileService
        self.userProvider = userProvider
        self.errorHandler = errorHandler
        self.observeUserChanges()
    }
    
    private func observeUserChanges() {
        userListenerCancellable = userProvider.currentUserPublisher
            .sink { [weak self] authUser in
                guard let self = self else { return }
                let newUID = authUser?.uid
                if self.currentUID != newUID {
                    print("üîÑ UserInfoCellManager –ø–æ–ª—É—á–∏–ª –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \(String(describing: self.currentUID)) ‚Üí \(String(describing: newUID))")
                    self.profileLoadCancellable?.cancel()
                    self.currentUID = newUID
                }
            }
    }
    
    /// –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ UID.
    /// - –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏.
    /// - –í —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞ –ø—É–±–ª–∏–∫—É–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å.
    /// - –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—É–±–ª–∏–∫—É–µ—Ç `.failure` –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∞–ª–µ—Ä—Ç.
    func loadUserProfile(uid: String) {
        print("UserInfoCellManager func loadUserProfile(uid: String)")
        profileLoadCancellable?.cancel()
        profileLoadingState.send(.loading)
        
        profileLoadCancellable = profileService.fetchProfile(uid: uid)
            .sink(
                receiveCompletion: { [weak self] completion in
                    switch completion {
                    case .finished:
                        self?.profileLoadingState.send(.idle)
                    case .failure(let error):
                        self?.profileLoadingState.send(.failure)
                        self?.handleError(error, operationDescription: Localized.TitleOfFailedOperationFirebase.fetchingProfileData)
                    }
                },
                receiveValue: { [weak self] profile in
                    self?.userProfile.send(profile)
                    self?.profileLoadingState.send(.idle)
                }
            )
    }
    
    private func handleError(_ error: Error, operationDescription: String) {
        let errorMessage = errorHandler.handle(error: error)
        AlertManager.shared.showGlobalAlert(
            message: errorMessage,
            operationDescription: operationDescription,
            alertType: .ok
        )
    }
}

